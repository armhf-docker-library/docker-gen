eyJhbGciOiJIUzI1NiJ9.bWF0cml4OgogIFZFUlNJT046CiAgICAtIG1hc3RlcgogICAgLSAiMC43LjMiCgpwaXBlbGluZToKICBjbG9uZToKICAgIGltYWdlOiBhcm1oZnBsdWdpbnMvZ2l0CgogIGJ1aWxkOgogICAgaW1hZ2U6IGFybWhmYnVpbGQvZ29sYW5nOjEuNQogICAgY29tbWFuZHM6CiAgICAgIC0gZ2l0IGNsb25lIC0tc2luZ2xlLWJyYW5jaCAtLWJyYW5jaCAke1ZFUlNJT059IGh0dHBzOi8vZ2l0aHViLmNvbS9qd2lsZGVyL2RvY2tlci1nZW4KICAgICAgLSBjZCBkb2NrZXItZ2VuCiAgICAgIC0gc2VkIC1pICdzL0ZST00gYWxwaW5lL0ZST00gYXJtaGZidWlsZFwvYWxwaW5lLycgRG9ja2VyZmlsZQogICAgICAtIHNlZCAtaSAncy9hbHBpbmUtbGludXgtYW1kNjQvbGludXgtYXJtaGYvJyBEb2NrZXJmaWxlCgogIHB1Ymxpc2hfZG9ja2VyX2JyYW5jaDoKICAgIGltYWdlOiBhcm1oZnBsdWdpbnMvZG9ja2VyCiAgICBjb250ZXh0OiBkb2NrZXItZ2VuCiAgICBkb2NrZXJmaWxlOiBkb2NrZXItZ2VuL0RvY2tlcmZpbGUKICAgIHVzZXJuYW1lOiAke0RPQ0tFUl9VU0VSfQogICAgcGFzc3dvcmQ6ICR7RE9DS0VSX1BBU1NXT1JEfQogICAgZW1haWw6ICR7RE9DS0VSX0VNQUlMfQogICAgcmVwbzogYXJtaGZidWlsZC9kb2NrZXItZ2VuCiAgICB0YWdzOiBbICIwLjcuMyIsICIwLjciLCAibGF0ZXN0IiBdCiAgICB3aGVuOgogICAgICBtYXRyaXg6CiAgICAgICAgVkVSU0lPTjogIjAuNy4zIgoKICBwdWJsaXNoX2RvY2tlcl9sYXRlc3Q6CiAgICBpbWFnZTogYXJtaGZwbHVnaW5zL2RvY2tlcgogICAgY29udGV4dDogZG9ja2VyLWdlbgogICAgZG9ja2VyZmlsZTogZG9ja2VyLWdlbi9Eb2NrZXJmaWxlCiAgICB1c2VybmFtZTogJHtET0NLRVJfVVNFUn0KICAgIHBhc3N3b3JkOiAke0RPQ0tFUl9QQVNTV09SRH0KICAgIGVtYWlsOiAke0RPQ0tFUl9FTUFJTH0KICAgIHJlcG86IGFybWhmYnVpbGQvZG9ja2VyLWdlbgogICAgdGFnczogWyAibWFzdGVyIiBdCiAgICB3aGVuOgogICAgICBtYXRyaXg6CiAgICAgICAgVkVSU0lPTjogbWFzdGVyCg.8zbuPJZOAbtrx5z1kzybEYohlIyPDOrTQHWcYFc0fnA